COMPILER

- function calls don't work
- if statements aren't implemented
- should be object-oriented -- will take care of overloading
- linearizer uses Type#size to compute instructions, but defs that take parameters with abstract types don't know what they will be called with! this computation must take place on a per-call basis, when argument types are known (note this makes CheckedDef useless)

INTERACTIVE PROMPT

- ":t <expr>" doesn't take user-defined functions into account
- defining a function yields "No main function. (Must be () => Null)"
- ":t myFunction" should give myFunction's type signature, not parse it as an expression
- should save expressions typed in as "res{n}"
